1. When a letter is pressed on a computer, the computer references a database that's been programmed through binary code and uses that information to assemble the pixels for the letter to show in the assigned font on the screen.
2. Computers use input to create pathways of code which resemble “branches” that have instructions for the computer to follow, which can include graphics and motions, enabling a user experience when the computer outputs the information.  
3. Software can be referred to as “infinitely produced nothings” because software is ever expanding. If we take an application like a text messenger we can see that there is already a software that allows the text message to exist, however the software can be upgraded to show emoticons and, for iPhones, whether someone liked or loved the message. 
4. Code becomes software when different files of code are compiled to produce one overall task. 
5. A set of finite rules that a computer carries out to get an outcome.
6. The DRY principle is used to keep a coder from rewriting the same code redundantly.
7. Object-orientated programming is a list of code put into files that will interact with each other on command.
8. Data is collected information and when code uses this data it transforms it into a function used in software.
9. A framework is a basic guideline in which code would be written around.
10. Debugging is when code is run line by line to find the exact place where an error has occurred.
11. I want to learn how to code because I believe that it will serve as a catalyst in my life. I've seen the innovation that coders are capable of and I've also seen how much of a financial impact it can make for me and my family. Coding also teaches other skills like problem solving and time management which I am more than happy to further develop for my career and personal life.